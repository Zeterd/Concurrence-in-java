# THREADS
TID	NAME	CLASS
0	test2	org.cooperari.junit.CJUnitRunner$MethodRunner
1	<1>	pc.stack.StackTest$$Lambda$5/467520020
2	<2>	pc.stack.StackTest$$Lambda$6/534924727
3	<3>	pc.stack.StackTest$$Lambda$7/1524678703
4	<4>	pc.stack.StackTest$$Lambda$8/512293290
# EXECUTION TRACE
#	TID	STEP	EVENT	SOURCE FILE	LINE	YIELD POINT	STAGE
0	0	0	-	<system>	0	<started>	0
1	0	1	-	AArrayStackV1.java	21	field-set(pc.stack.AArrayStackV1.array)	0
2	0	2	-	AArrayStackV1.java	22	field-set(pc.stack.AArrayStackV1.top)	0
3	0	3	-	StackTest.java	91	org.cooperari.CSystem.forkAndJoin(Runnable[])	0
4	0	4	-	StackTest.java	91	org.cooperari.CSystem.forkAndJoin(Runnable[])	1
5	1	0	-	<system>	0	<started>	0
6	2	0	-	<system>	0	<started>	0
7	2	1	-	AArrayStackV1.java	41	field-get(pc.stack.AArrayStackV1.top)	0
8	1	1	-	AArrayStackV1.java	35	field-get(pc.stack.AArrayStackV1.top)	0
9	2	2	-	AArrayStackV1.java	41	java.util.concurrent.atomic.AtomicInteger.get()	0
10	1	2	-	AArrayStackV1.java	35	java.util.concurrent.atomic.AtomicInteger.getAndIncrement()	0
11	1	3	-	AArrayStackV1.java	36	field-get(pc.stack.AArrayStackV1.array)	0
12	2	3	-	AArrayStackV1.java	44	field-get(pc.stack.AArrayStackV1.top)	0
13	2	4	-	AArrayStackV1.java	44	java.util.concurrent.atomic.AtomicInteger.decrementAndGet()	0
14	2	5	-	AArrayStackV1.java	45	field-get(pc.stack.AArrayStackV1.array)	0
15	2	6	-	AArrayStackV1.java	46	field-get(pc.stack.AArrayStackV1.array)	0
16	1	4	-	AArrayStackV1.java	35	field-get(pc.stack.AArrayStackV1.top)	0
17	2	7	-	StackTest.java	93	field-set(pc.stack.StackTest.R.v)	0
18	2	8	-	<system>	0	<terminated>	0
19	1	5	-	AArrayStackV1.java	35	java.util.concurrent.atomic.AtomicInteger.getAndIncrement()	0
20	1	6	-	AArrayStackV1.java	36	field-get(pc.stack.AArrayStackV1.array)	0
21	1	7	-	<system>	0	<terminated>	0
22	0	5	-	StackTest.java	95	org.cooperari.CSystem.forkAndJoin(Runnable[])	0
23	0	6	-	StackTest.java	95	org.cooperari.CSystem.forkAndJoin(Runnable[])	1
24	3	0	-	<system>	0	<started>	0
25	4	0	-	<system>	0	<started>	0
26	4	1	-	AArrayStackV1.java	41	field-get(pc.stack.AArrayStackV1.top)	0
27	4	2	-	AArrayStackV1.java	41	java.util.concurrent.atomic.AtomicInteger.get()	0
28	3	1	-	AArrayStackV1.java	35	field-get(pc.stack.AArrayStackV1.top)	0
29	3	2	-	AArrayStackV1.java	35	java.util.concurrent.atomic.AtomicInteger.getAndIncrement()	0
30	3	3	-	AArrayStackV1.java	36	field-get(pc.stack.AArrayStackV1.array)	0
31	3	4	-	<system>	0	<terminated>	0
32	4	3	-	AArrayStackV1.java	44	field-get(pc.stack.AArrayStackV1.top)	0
33	4	4	-	AArrayStackV1.java	44	java.util.concurrent.atomic.AtomicInteger.decrementAndGet()	0
34	4	5	-	AArrayStackV1.java	45	field-get(pc.stack.AArrayStackV1.array)	0
35	4	6	-	AArrayStackV1.java	46	field-get(pc.stack.AArrayStackV1.array)	0
36	4	7	-	StackTest.java	97	field-set(pc.stack.StackTest.R.v)	0
37	4	8	-	<system>	0	<terminated>	0
38	0	7	-	AArrayStackV1.java	41	field-get(pc.stack.AArrayStackV1.top)	0
39	0	8	-	AArrayStackV1.java	41	java.util.concurrent.atomic.AtomicInteger.get()	0
40	0	9	-	AArrayStackV1.java	44	field-get(pc.stack.AArrayStackV1.top)	0
41	0	10	-	AArrayStackV1.java	44	java.util.concurrent.atomic.AtomicInteger.decrementAndGet()	0
42	0	11	-	AArrayStackV1.java	45	field-get(pc.stack.AArrayStackV1.array)	0
43	0	12	-	AArrayStackV1.java	46	field-get(pc.stack.AArrayStackV1.array)	0
44	0	13	-	StackTest.java	99	field-set(pc.stack.StackTest.R.v)	0
45	0	14	-	AArrayStackV1.java	41	field-get(pc.stack.AArrayStackV1.top)	0
46	0	15	-	AArrayStackV1.java	41	java.util.concurrent.atomic.AtomicInteger.get()	0
47	0	16	-	StackTest.java	100	field-set(pc.stack.StackTest.R.v)	0
48	0	17	-	StackTest.java	176	field-get(pc.stack.StackTest.R.v)	0
49	0	18	-	StackTest.java	176	field-get(pc.stack.StackTest.R.v)	0
50	0	19	-	StackTest.java	176	field-get(pc.stack.StackTest.R.v)	0
51	0	20	-	StackTest.java	176	field-get(pc.stack.StackTest.R.v)	0
52	0	21	-	StackTest.java	186	field-get(System.out)	0
53	0	22	-	<system>	0	<terminated>	0
# STACK TRACE FOR FAILURE
java.lang.AssertionError: Incorrect values: [null, 3, 2, null]
	at org.junit.Assert.fail(Assert.java:88)
	at pc.stack.StackTest.assertOneOf(StackTest.java:187)
	at pc.stack.StackTest.test2(StackTest.java:102)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.cooperari.junit.CJUnitRunner$MethodRunner.run(CJUnitRunner.java:226)
	at org.cooperari.core.CThread.run(CThread.java:188)
